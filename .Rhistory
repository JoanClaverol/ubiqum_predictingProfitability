#
ex_prod_dummy %<>%
rowwise() %>%
mutate(total_stars = sum(x5, x4, x3, x2, x1))
ex_prod_dummy %>%
ggplot(aes(x = total_stars, y = Vol)) +
geom_point(color = "dodgerblue4") +
geom_smooth(alpha=0.3, size=0, span=0.5, se = F) +
geom_label(aes(x = 650, y = 900,
label = "There is a clear positive correlation\nbetween the total number of starts\na product has with the number of sales"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "#555555",
fill = "white",
label.size = NA,
size = 4.5 ) +
theme_classic() +
theme(axis.text.y = element_text(),
axis.text.x = element_text(),
legend.title = element_blank()) +
labs(title = "Total sales vs total number of stars by product",
y = "Volume", x = "total number of stars")
ex_prod_dummy %<>%
select(-x5, -x4, -x3, -x2, -x1)
# creating trainin and testing with the features selected
set.seed(123)
train_id <- createDataPartition(y = ex_prod_dummy$Vol,
p = 0.75,
list = F)
train <- ex_prod_dummy[train_id,]
test <- ex_prod_dummy[-train_id,]
# model creation
mod_3lm <- lm(formula = Vol ~., data = train)
# metrics
postResample(pred = predict(object = mod_3lm, newdata = test),
obs = test$Vol)
plot(mod_3lm)
plot(mod_3lm)
knitr::opts_chunk$set(echo = FALSE)
if(require("pacman")=="FALSE"){
install.packages("pacman")
}
pacman::p_load(corrplot, tidyverse, caret, dunn.test, Hmisc,xtable, htmlTable,
partykit, knitr, kableExtra, RColorBrewer, e1071, gbm,
tibble, modelr, magrittr, VIM, fastDummies, plotly)
ex_prod <- read_csv("../data/existingproductattributes2017.2.csv")
NwProd <- read_csv("../data/newproductattributes2017.2.csv")
fact_var <- c("ProductType","ProductNum")
ex_prod[,fact_var] <- apply(ex_prod[,fact_var], 2, as.factor)
ex_prod <- tibble::column_to_rownames(.data = ex_prod,
var = "ProductNum")
ex_prod$ProductNum <- NULL
aggr(ex_prod, col=c('lightblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7,  gap=3, only.miss = F,
ylab=c("Histogram of missing data","Pattern"),plot = T)
# change blue color
ex_prod$BestSellersRank <- NULL
# Is the volume related to the categories?
ex_prod %>%
group_by(ProductType) %>%
summarise(Total_Volume = sum(Volume)) %>%
arrange(desc(Total_Volume)) -> Volume_category
# Number of products by category
ex_prod %>%
group_by(ProductType) %>%
summarise(Number_Products = n()) %>%
arrange(desc(Number_Products)) -> NumProd_category
# Profit per category
ex_prod %>%
group_by(ProductType) %>%
summarise(Mean_Profit_Perc = round(mean(ProfitMargin),2)) %>%
arrange(desc(Mean_Profit_Perc)) -> Profit_category
# Create a graph to understand Blackwell's business
Profit_category %>%
left_join(NumProd_category, by = 'ProductType') %>%
left_join(Volume_category, by = 'ProductType') %>%
mutate(Total_Profits = Mean_Profit_Perc*Total_Volume,
Total_Profits_Dol = paste(round((Total_Profits), 0),"$")) %>%
arrange(Total_Profits) %>%
ggplot(aes(x = reorder(ProductType, Total_Profits))) +
geom_col(aes(y = -Total_Profits), fill = "gold") +
geom_col(aes(y = Total_Volume), fill = "dodgerblue3") +
coord_flip() +
scale_y_continuous(limits = c(-6000,27000), labels = NULL) +
geom_label(aes(x = ProductType, y = -Total_Profits,
label = Total_Profits_Dol),
hjust = 1,
vjust = 0.4,
colour = "goldenrod3",
fill = NA,
label.size = NA,
size = 3.5) +
geom_label(aes(x = ProductType, y = Total_Volume,
label = round(Total_Volume, 0)),
hjust = 0,
vjust = 0.4,
colour = "dodgerblue4",
fill = NA,
label.size = NA,
size = 3.5) +
labs(title = "Total Profits ($) vs Total Volume (items)") +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) + theme_void() -> p1
p1 + theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text()) +
geom_label(aes(x = "Printer", y = 10000,
label = "The 45% of the sales comes from\naccessories, but they only\nrespresents the 15% of the total\nprofit"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "dodgerblue4",
fill = "white",
label.size = NA,
size = 4.5) +
geom_label(aes(x = "Laptop", y = 10000,
label = "Extended warranty generates the\n46% of the total profit, and\nrepresents the 18% of the sales"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "goldenrod3",
fill = "white",
label.size = NA,
size = 4.5)
# creating a function to find outliers
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
# creating the graphs
ex_prod %>%
rownames_to_column(var = "productNum") %>%
group_by(ProductType) %>%
mutate(outlier=ifelse(is_outlier(Volume),as.numeric(productNum),
as.numeric(NA))) %>%
ggplot(aes(ProductType, Volume)) +
geom_boxplot(outlier.color = "red", col = "dodgerblue3") +
geom_label(aes(label = outlier), hjust = 0,
vjust = 0, check_overlap = TRUE,
colour = "red",
fill = NA,
label.size = NA,
size = 3.5) +
labs(title = "Volume distribution in relation to product type") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
axis.text.y = element_text(size = 11), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
geom_label(aes(x = "Laptop", y = 10000,
label = "Accessories: median very close to 0, and the product\n150 is an anomaly."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8) +
geom_label(aes(x = "Laptop", y = 8000,
label = "Extended warranty: the range is very gathered and\nthere are two products, 132 and 133, close to 0."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8) +
geom_label(aes(x = "Laptop", y = 6000,
label = "GameConsole: the highest sells in the company and\nmore stable."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8)
# train and test
train_id <- createDataPartition(y = ex_prod$Volume, p = 0.75, list = F)
train <- ex_prod[train_id,]
test <- ex_prod[-train_id,]
# create linear regression model
mod_lm <- lm(formula = Volume ~ ., data = train)
# model performance
postResample(pred = predict(object = mod_lm, newdata = test),
obs = test$Volume)
# Dummy variables
ex_prod_dummy <- ex_prod %>%
fastDummies::dummy_columns(remove_first_dummy = FALSE) %>%
select(-ProductType, -ShippingWeight, -ProductDepth,
-ProductWidth, -ProductHeight, -ProductType_Accessories,
-ProductType_Software, -ProductType_Display, -ProductType_Printer,
-ProductType_PrinterSupplies, -ProductType_ExtendedWarranty,
-ProductType_Tablet, -ProductType_GameConsole) %>%
rename(PC = ProductType_PC,
Laptop = ProductType_Laptop,
Netb = ProductType_Netbook,
Smart_Ph = ProductType_Smartphone,
x5 = x5StarReviews,
x4 = x4StarReviews,
x3 = x3StarReviews,
x2 = x2StarReviews,
x1 = x1StarReviews,
Pos_Ser = PositiveServiceReview,
Neg_Ser = NegativeServiceReview,
Recomend = Recommendproduct,
Profit_M = ProfitMargin,
Vol = Volume)
rownames(ex_prod_dummy) <- rownames(ex_prod)
# Correlation plot
ex_prod_corr <- cor(ex_prod_dummy)
corrplot(ex_prod_corr, method = "pie",
type = "lower", order = "hclust",
col = brewer.pal(n = 8, name = "RdBu"),
number.cex = 0.9, number.digits = 2,
tl.cex = 1.2, tl.srt = 1, tl.col = "black")
# creating trainin and testing with the features selected
set.seed(123)
train_id <- createDataPartition(y = ex_prod_dummy$Vol,
p = 0.75,
list = F)
train <- ex_prod_dummy[train_id,]
test <- ex_prod_dummy[-train_id,]
# model creation
mod_2lm <- lm(formula = Vol ~., data = train)
# metrics
postResample(pred = predict(object = mod_2lm, newdata = test),
obs = test$Vol)
ex_prod_dummy %>%
rownames_to_column(var = "product_num") %>%
gather(key = "star_type", value = "num_stars", x5, x4, x3, x2, x1) %>%
ggplot(aes(x = num_stars, y = Vol, color = star_type)) +
geom_point() +
geom_smooth(se = F, size = 0.15) +
theme_classic() +
theme(axis.text.y = element_text(),
axis.text.x = element_text(),
legend.title = element_blank()) +
labs(title = "Total sales vs type of star",
y = "Volume", x = "Number of stars") -> stars_plot
ggplotly(stars_plot) %>%
layout(annotations = list(x = 2801, y = 11204, text = "Prod. 150",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10))) %>%
layout(annotations = list(x = 1759, y = 7036, text = "Prod. 198",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10),
ax= 0, ay = -20)) %>%
layout(annotations = list(x = 1654, y = 2052, text = "Prod. 123",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10),
ax = 10, ay = 20))
ex_prod_dummy %<>%
rownames_to_column(var = "product_num") %>%
filter(!(product_num %in% c("123","198","150"))) %>%
column_to_rownames(var = "product_num")
knitr::opts_chunk$set(echo = FALSE)
if(require("pacman")=="FALSE"){
install.packages("pacman")
}
pacman::p_load(corrplot, tidyverse, caret, dunn.test, Hmisc,xtable, htmlTable,
partykit, knitr, kableExtra, RColorBrewer, e1071, gbm,
tibble, modelr, magrittr, VIM, fastDummies, plotly)
ex_prod <- read_csv("../data/existingproductattributes2017.2.csv")
NwProd <- read_csv("../data/newproductattributes2017.2.csv")
fact_var <- c("ProductType","ProductNum")
ex_prod[,fact_var] <- apply(ex_prod[,fact_var], 2, as.factor)
ex_prod <- tibble::column_to_rownames(.data = ex_prod,
var = "ProductNum")
ex_prod$ProductNum <- NULL
aggr(ex_prod, col=c('lightblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7,  gap=3, only.miss = F,
ylab=c("Histogram of missing data","Pattern"),plot = T)
# change blue color
ex_prod$BestSellersRank <- NULL
# Is the volume related to the categories?
ex_prod %>%
group_by(ProductType) %>%
summarise(Total_Volume = sum(Volume)) %>%
arrange(desc(Total_Volume)) -> Volume_category
# Number of products by category
ex_prod %>%
group_by(ProductType) %>%
summarise(Number_Products = n()) %>%
arrange(desc(Number_Products)) -> NumProd_category
# Profit per category
ex_prod %>%
group_by(ProductType) %>%
summarise(Mean_Profit_Perc = round(mean(ProfitMargin),2)) %>%
arrange(desc(Mean_Profit_Perc)) -> Profit_category
# Create a graph to understand Blackwell's business
Profit_category %>%
left_join(NumProd_category, by = 'ProductType') %>%
left_join(Volume_category, by = 'ProductType') %>%
mutate(Total_Profits = Mean_Profit_Perc*Total_Volume,
Total_Profits_Dol = paste(round((Total_Profits), 0),"$")) %>%
arrange(Total_Profits) %>%
ggplot(aes(x = reorder(ProductType, Total_Profits))) +
geom_col(aes(y = -Total_Profits), fill = "gold") +
geom_col(aes(y = Total_Volume), fill = "dodgerblue3") +
coord_flip() +
scale_y_continuous(limits = c(-6000,27000), labels = NULL) +
geom_label(aes(x = ProductType, y = -Total_Profits,
label = Total_Profits_Dol),
hjust = 1,
vjust = 0.4,
colour = "goldenrod3",
fill = NA,
label.size = NA,
size = 3.5) +
geom_label(aes(x = ProductType, y = Total_Volume,
label = round(Total_Volume, 0)),
hjust = 0,
vjust = 0.4,
colour = "dodgerblue4",
fill = NA,
label.size = NA,
size = 3.5) +
labs(title = "Total Profits ($) vs Total Volume (items)") +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) + theme_void() -> p1
p1 + theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text()) +
geom_label(aes(x = "Printer", y = 10000,
label = "The 45% of the sales comes from\naccessories, but they only\nrespresents the 15% of the total\nprofit"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "dodgerblue4",
fill = "white",
label.size = NA,
size = 4.5) +
geom_label(aes(x = "Laptop", y = 10000,
label = "Extended warranty generates the\n46% of the total profit, and\nrepresents the 18% of the sales"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "goldenrod3",
fill = "white",
label.size = NA,
size = 4.5)
# creating a function to find outliers
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
# creating the graphs
ex_prod %>%
rownames_to_column(var = "productNum") %>%
group_by(ProductType) %>%
mutate(outlier=ifelse(is_outlier(Volume),as.numeric(productNum),
as.numeric(NA))) %>%
ggplot(aes(ProductType, Volume)) +
geom_boxplot(outlier.color = "red", col = "dodgerblue3") +
geom_label(aes(label = outlier), hjust = 0,
vjust = 0, check_overlap = TRUE,
colour = "red",
fill = NA,
label.size = NA,
size = 3.5) +
labs(title = "Volume distribution in relation to product type") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
axis.text.y = element_text(size = 11), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
geom_label(aes(x = "Laptop", y = 10000,
label = "Accessories: median very close to 0, and the product\n150 is an anomaly."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8) +
geom_label(aes(x = "Laptop", y = 8000,
label = "Extended warranty: the range is very gathered and\nthere are two products, 132 and 133, close to 0."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8) +
geom_label(aes(x = "Laptop", y = 6000,
label = "GameConsole: the highest sells in the company and\nmore stable."),
label.size = NA,
size = 4.5,
colour = "#555555",
hjust = 0,
vjust = 0.5,
lineheight = 0.8)
# train and test
train_id <- createDataPartition(y = ex_prod$Volume, p = 0.75, list = F)
train <- ex_prod[train_id,]
test <- ex_prod[-train_id,]
# create linear regression model
mod_lm <- lm(formula = Volume ~ ., data = train)
# model performance
postResample(pred = predict(object = mod_lm, newdata = test),
obs = test$Volume)
# Dummy variables
ex_prod_dummy <- ex_prod %>%
fastDummies::dummy_columns(remove_first_dummy = FALSE) %>%
select(-ProductType, -ShippingWeight, -ProductDepth,
-ProductWidth, -ProductHeight, -ProductType_Accessories,
-ProductType_Software, -ProductType_Display, -ProductType_Printer,
-ProductType_PrinterSupplies, -ProductType_ExtendedWarranty,
-ProductType_Tablet, -ProductType_GameConsole) %>%
rename(PC = ProductType_PC,
Laptop = ProductType_Laptop,
Netb = ProductType_Netbook,
Smart_Ph = ProductType_Smartphone,
x5 = x5StarReviews,
x4 = x4StarReviews,
x3 = x3StarReviews,
x2 = x2StarReviews,
x1 = x1StarReviews,
Pos_Ser = PositiveServiceReview,
Neg_Ser = NegativeServiceReview,
Recomend = Recommendproduct,
Profit_M = ProfitMargin,
Vol = Volume)
rownames(ex_prod_dummy) <- rownames(ex_prod)
# Correlation plot
ex_prod_corr <- cor(ex_prod_dummy)
corrplot(ex_prod_corr, method = "pie",
type = "lower", order = "hclust",
col = brewer.pal(n = 8, name = "RdBu"),
number.cex = 0.9, number.digits = 2,
tl.cex = 1.2, tl.srt = 1, tl.col = "black")
# creating trainin and testing with the features selected
set.seed(123)
train_id <- createDataPartition(y = ex_prod_dummy$Vol,
p = 0.75,
list = F)
train <- ex_prod_dummy[train_id,]
test <- ex_prod_dummy[-train_id,]
# model creation
mod_2lm <- lm(formula = Vol ~., data = train)
# metrics
postResample(pred = predict(object = mod_2lm, newdata = test),
obs = test$Vol)
ex_prod_dummy %>%
rownames_to_column(var = "product_num") %>%
gather(key = "star_type", value = "num_stars", x5, x4, x3, x2, x1) %>%
ggplot(aes(x = num_stars, y = Vol, color = star_type)) +
geom_point() +
geom_smooth(se = F, size = 0.15) +
theme_classic() +
theme(axis.text.y = element_text(),
axis.text.x = element_text(),
legend.title = element_blank()) +
labs(title = "Total sales vs type of star",
y = "Volume", x = "Number of stars") -> stars_plot
ggplotly(stars_plot) %>%
layout(annotations = list(x = 2801, y = 11204, text = "Prod. 150",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10))) %>%
layout(annotations = list(x = 1759, y = 7036, text = "Prod. 198",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10),
ax= 0, ay = -20)) %>%
layout(annotations = list(x = 1654, y = 2052, text = "Prod. 123",
showarrow = TRUE, arrowcolor = "#555555",
arrowsize = 0.3, font = list(size = 10),
ax = 10, ay = 20))
ex_prod_dummy %<>%
rownames_to_column(var = "product_num") %>%
filter(!(product_num %in% c("123","198","150")))
#
ex_prod_dummy %<>%
rowwise() %>%
mutate(total_stars = sum(x5, x4, x3, x2, x1))
ex_prod_dummy %>%
ggplot(aes(x = total_stars, y = Vol)) +
geom_point(color = "dodgerblue4") +
geom_smooth(alpha=0.3, size=0, span=0.5, se = F) +
geom_label(aes(x = 650, y = 900,
label = "There is a clear positive correlation\nbetween the total number of starts\na product has with the number of sales"),
hjust = 0,
vjust = 0.5,
lineheight = 0.8,
colour = "#555555",
fill = "white",
label.size = NA,
size = 4.5 ) +
theme_classic() +
theme(axis.text.y = element_text(),
axis.text.x = element_text(),
legend.title = element_blank()) +
labs(title = "Total sales vs total number of stars by product",
y = "Volume", x = "total number of stars")
ex_prod_dummy %<>%
select(-x5, -x4, -x3, -x2, -x1) %>%
column_to_rownames(var = "product_num")
# creating trainin and testing with the features selected
set.seed(123)
train_id <- createDataPartition(y = ex_prod_dummy$Vol,
p = 0.75,
list = F)
train <- ex_prod_dummy[train_id,]
test <- ex_prod_dummy[-train_id,]
# model creation
mod_3lm <- lm(formula = Vol ~., data = train)
# metrics
postResample(pred = predict(object = mod_3lm, newdata = test),
obs = test$Vol)
plot(mod_3lm)
plot(mod_3lm)
View(ex_prod_dummy)
View(ex_prod)
# model creation
mod_3lm <- lm(formula = Vol ~., data = ex_prod_dummy)
plot(mod_3lm)
View(ex_prod)
